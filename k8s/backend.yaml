---
# Backend ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: task-management
data:
  NODE_ENV: "production"
  PORT: "3000"
---
# Backend Secret
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: task-management
type: Opaque
data:
  # Base64 encoded value of: postgresql://postgres:postgres@postgres:5432/taskdb?schema=public
  DATABASE_URL: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBvc3RncmVzQHBvc3RncmVzOjU0MzIvdGFza2RiP3NjaGVtYT1wdWJsaWM=
---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: task-management
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: oliver.azurecr.io/task-app-backend:latest
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secret
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 20
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          failureThreshold: 30
          periodSeconds: 10
        command: ["/bin/sh", "-c"]
        args:
        - npx prisma migrate deploy && node dist/main
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: task-management
spec:
  selector:
    app: backend
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
